{"ast":null,"code":"var _jsxFileName = \"/home/harsh/Desktop/01-starting-setup/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  const [enteredTtitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  /*>we can use one state istead of many for different const< \n    const [userInput, setUserInput] = useState({\n    enteredTtitle: \"\",\n    enteredAmount: \"\",\n    enteredAmount: \"\",\n  });\n  \n  */\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n    /*\n       // setUserInput({\n      //   ...userInput,\n      //   enteredTtitle : event.target.value,\n      // })\n    */\n    // setUserInput((prevState) =>{\n    //   return {...prevState,enteredTtitle: event.target.value}\n    //this is the safer way to access the all current \n    //value updates of previous variables\n    // })\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n    /*\n    setUserInput({\n      ...userInput,\n      enteredAmount: event.target.value,\n    });\n    */\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n    /*  setUserInput({\n      ...userInput,\n      enteredDate: event.target.value,\n    });\n    */\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTtitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    setEnteredDate('');\n    setEnteredTitle('');\n    setEnteredAmount('');\n    console.log(expenseData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTtitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          steps: \"0.01\",\n          value: enteredAmount,\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          value: enteredDate,\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"IGKc61DOqTaRrCP0ljj+SKMItRA=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/home/harsh/Desktop/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","enteredTtitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,aAAD,EAAgBC,eAAhB,IAAmCH,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACI,aAAD,EAAeC,gBAAf,IAAmCL,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACM,WAAD,EAAaC,cAAb,IAA+BP,QAAQ,CAAC,EAAD,CAA7C;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE,QAAMQ,kBAAkB,GAAIC,KAAD,IAAW;AACpCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAEA;AACJ;AACA;AACA;AACA;AACA;AAEM;AACA;AACD;AACA;AACC;AACH,GAfD;;AAgBA,QAAMC,mBAAmB,GAAIH,KAAD,IAAW;AACrCJ,IAAAA,gBAAgB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AAGA;AACJ;AACA;AACA;AACA;AACA;AAEG,GAXD;;AAYA,QAAME,iBAAiB,GAAIJ,KAAD,IAAW;AACnCF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AAGA;AACJ;AACA;AACA;AACA;AAEG,GAVD;;AAYA,QAAMG,aAAa,GAAIL,KAAD,IAAU;AAC9BA,IAAAA,KAAK,CAACM,cAAN;AAEA,UAAMC,WAAW,GAAG;AAClBC,MAAAA,KAAK,EAAEf,aADW;AAElBgB,MAAAA,MAAM,EAAEd,aAFU;AAGlBe,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASd,WAAT;AAHY,KAApB;AAKAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAJ,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACD,GAZD;;AAaA,sBACE;AAAM,IAAA,QAAQ,EAAEF,aAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEZ,aAA1B;AAAyC,UAAA,QAAQ,EAAEM;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,GAAG,EAAC,MAFN;AAGE,UAAA,KAAK,EAAC,MAHR;AAIE,UAAA,KAAK,EAAEJ,aAJT;AAKE,UAAA,QAAQ,EAAEQ;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAeE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,GAAG,EAAC,YAFN;AAGE,UAAA,GAAG,EAAC,YAHN;AAIE,UAAA,KAAK,EAAEN,WAJT;AAKE,UAAA,QAAQ,EAAEO;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAyBE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CArGD;;GAAMZ,W;;KAAAA,W;AAuGN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = () => {\n  const [enteredTtitle, setEnteredTitle] = useState('');\n  const [enteredAmount,setEnteredAmount] = useState('');\n  const [enteredDate,setEnteredDate] = useState('');\n\n  /*>we can use one state istead of many for different const< \n    const [userInput, setUserInput] = useState({\n    enteredTtitle: \"\",\n    enteredAmount: \"\",\n    enteredAmount: \"\",\n  });\n  \n  */\n  \n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    \n    /*\n       // setUserInput({\n      //   ...userInput,\n      //   enteredTtitle : event.target.value,\n      // })\n    */\n\n      // setUserInput((prevState) =>{\n      //   return {...prevState,enteredTtitle: event.target.value}\n     //this is the safer way to access the all current \n     //value updates of previous variables\n      // })\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n   \n\n    /*\n    setUserInput({\n      ...userInput,\n      enteredAmount: event.target.value,\n    });\n    */\n    \n  };\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    \n\n    /*  setUserInput({\n      ...userInput,\n      enteredDate: event.target.value,\n    });\n    */\n   \n  };\n\n  const submitHandler = (event) =>{\n    event.preventDefault()\n\n    const expenseData = {\n      title: enteredTtitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    }\n    setEnteredDate('')\n    setEnteredTitle('')\n    setEnteredAmount('')\n    console.log(expenseData);\n  }\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" value={enteredTtitle} onChange={titleChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            steps=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__actions\">\n          <button type=\"submit\">Add Expense</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n"]},"metadata":{},"sourceType":"module"}