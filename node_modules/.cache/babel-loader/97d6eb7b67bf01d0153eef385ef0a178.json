{"ast":null,"code":"var _jsxFileName = \"/home/harsh/Desktop/01-starting-setup/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  // const [enteredTtitle, setEnteredTitle] = useState('');\n  // const [enteredAmount,setEnteredAmount] = useState('');\n  // const [enteredDate,setEnteredDate] = useState('');\n\n  /*we can use one state istead of many for different const */\n  const [userInput, setUserInput] = useState({\n    enteredTtitle: \"\",\n    enteredAmount: \"\",\n    enteredAmount: \"\"\n  });\n\n  const titleChangeHandler = event => {\n    // setEnteredTitle(event.target.value);\n    // console.log(enteredTtitle);\n\n    /*\n       // setUserInput({\n      //   ...userInput,\n      //   enteredTtitle : event.target.value,\n      // })\n    */\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredTtitle: event.target.value\n      }; //this is the safer way to access the all current \n      //value updates of previous variables\n    });\n  };\n\n  const amountChangeHandler = event => {\n    // setEnteredAmount(event.target.value)\n    // console.log(enteredAmount);\n    setUserInput({ ...userInput,\n      enteredAmount: event.target.value\n    });\n  };\n\n  const dateChangeHandler = event => {\n    // setEnteredDate(event.target.value);\n    // console.log(enteredDate);\n    setUserInput({ ...userInput,\n      enteredDate: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          steps: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"BwOLuflCEoIM0PAoHmhxIxWytf8=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/home/harsh/Desktop/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","userInput","setUserInput","enteredTtitle","enteredAmount","titleChangeHandler","event","prevState","target","value","amountChangeHandler","dateChangeHandler","enteredDate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB;AACA;AACA;;AAEA;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC;AACzCI,IAAAA,aAAa,EAAE,EAD0B;AAEzCC,IAAAA,aAAa,EAAE,EAF0B;AAGzCA,IAAAA,aAAa,EAAE;AAH0B,GAAD,CAA1C;;AAMA,QAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AAEMJ,IAAAA,YAAY,CAAEK,SAAD,IAAc;AACzB,aAAO,EAAC,GAAGA,SAAJ;AAAcJ,QAAAA,aAAa,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAA1C,OAAP,CADyB,CAE5B;AACA;AACE,KAJW,CAAZ;AAKH,GAfD;;AAgBA,QAAMC,mBAAmB,GAAIJ,KAAD,IAAW;AACrC;AACA;AACAJ,IAAAA,YAAY,CAAC,EACX,GAAGD,SADQ;AAEXG,MAAAA,aAAa,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAFjB,KAAD,CAAZ;AAID,GAPD;;AAQA,QAAME,iBAAiB,GAAIL,KAAD,IAAW;AACnC;AACA;AACAJ,IAAAA,YAAY,CAAC,EACX,GAAGD,SADQ;AAEXW,MAAAA,WAAW,EAAEN,KAAK,CAACE,MAAN,CAAaC;AAFf,KAAD,CAAZ;AAID,GAPD;;AAQA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEJ;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,GAAG,EAAC,MAFN;AAGE,UAAA,KAAK,EAAC,MAHR;AAIE,UAAA,QAAQ,EAAEK;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAcE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,GAAG,EAAC,YAFN;AAGE,UAAA,GAAG,EAAC,YAHN;AAIE,UAAA,QAAQ,EAAEC;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAuBE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA3ED;;GAAMX,W;;KAAAA,W;AA6EN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = () => {\n  // const [enteredTtitle, setEnteredTitle] = useState('');\n  // const [enteredAmount,setEnteredAmount] = useState('');\n  // const [enteredDate,setEnteredDate] = useState('');\n\n  /*we can use one state istead of many for different const */\n  const [userInput, setUserInput] = useState({\n    enteredTtitle: \"\",\n    enteredAmount: \"\",\n    enteredAmount: \"\",\n  });\n\n  const titleChangeHandler = (event) => {\n    // setEnteredTitle(event.target.value);\n    // console.log(enteredTtitle);\n    /*\n       // setUserInput({\n      //   ...userInput,\n      //   enteredTtitle : event.target.value,\n      // })\n    */\n\n      setUserInput((prevState) =>{\n        return {...prevState,enteredTtitle: event.target.value}\n     //this is the safer way to access the all current \n     //value updates of previous variables\n      })\n  };\n  const amountChangeHandler = (event) => {\n    // setEnteredAmount(event.target.value)\n    // console.log(enteredAmount);\n    setUserInput({\n      ...userInput,\n      enteredAmount: event.target.value,\n    });\n  };\n  const dateChangeHandler = (event) => {\n    // setEnteredDate(event.target.value);\n    // console.log(enteredDate);\n    setUserInput({\n      ...userInput,\n      enteredDate: event.target.value,\n    });\n  };\n  return (\n    <form>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" onChange={titleChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            steps=\"0.01\"\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            onChange={dateChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__actions\">\n          <button type=\"submit\">Add Expense</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n"]},"metadata":{},"sourceType":"module"}